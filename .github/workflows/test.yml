name: test-and-release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: 'poetry'

      - name: Poetry Install
        run: poetry install --with dev,release
      
      - name: ruff check
        run: poetry run ruff check cf_pages_delete_previews -e

      - name: Pytest
        run: poetry run pytest -v
        env:
          CF_ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          CF_AUTH_EMAIL: ${{ secrets.AUTH_EMAIL }}
          CF_API_KEY: ${{ secrets.API_KEY }}
  
  release-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}

      - name: Install poetry
        run: pipx install poetry

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: 'poetry'

      - name: Poetry Install
        run: poetry install --only release
      - name: Semantic Release Preview
        run: |
          poetry run semantic-release -v --noop version --print

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install poetry
        run: pipx install poetry

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: 'poetry'

      - name: Poetry Install
        run: poetry install --with dev,release

      - name: Semantic Release
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release -v version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
