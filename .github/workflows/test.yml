name: test-and-release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Set up cache
        id: poetry-cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --with dev
        if: steps.poetry-cache.outputs.cache-hit != 'true'

      - name: Pytest
        run: poetry run pytest
        env:
          CF_ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          CF_AUTH_EMAIL: ${{ secrets.AUTH_EMAIL }}
          CF_API_KEY: ${{ secrets.API_KEY }}

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
      - name: Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish
